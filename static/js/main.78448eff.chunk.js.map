{"version":3,"sources":["Header.tsx","Bootstrap.tsx","Card.tsx","Media.tsx","Main.tsx","Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","props","state","checked","scrollProgress","handleChange","bind","this","setState","elt","document","getElementById","remove","createLight","pop","createElement","href","id","rel","crossOrigin","querySelector","append","win","scrollTop","scrollHeight","clientHeight","body","navbar","setAttribute","String","offsetHeight","documentElement","window","onscroll","scrollPercent","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","onChange","style","height","width","transitionDuration","aria-valuenow","aria-valuemin","aria-valuemax","Component","Container","children","Card","headers","repo","ref","proj","data","title","description","repoPath","notesPath","Media","name","confidence","src","alt","Main","Heading","text","Item","heading","Cards","cards","fetch","res","json","decks","entries","i","card","Math","floor","push","key","map","arr","getDecks","Iam","Proficiencies","profs","filter","media","be","wd","sc","getMedia","Education","Footer","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.78448eff.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Switch from 'react-switch'\r\n\r\nexport default class Header extends Component<{}, { checked: boolean, scrollProgress: number }> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = { checked: true, scrollProgress: 0 };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(checked: boolean) {\r\n        this.setState({ checked });\r\n        const elt = document.getElementById('theme');\r\n        if (elt) elt.remove();\r\n        else this.createLight();\r\n        //(document.getElementById('theme') as HTMLLinkElement).href = `https://stackpath.bootstrapcdn.com/bootswatch/4.4.1/${checked ? 'darkly' : 'litera'}/bootstrap.min.css`\r\n    }\r\n\r\n    createLight() {\r\n        const pop = document.createElement('link');\r\n        pop.href = 'https://stackpath.bootstrapcdn.com/bootswatch/4.4.1/litera/bootstrap.min.css';\r\n        pop.id = 'theme';\r\n        pop.rel = 'stylesheet';\r\n        pop.crossOrigin = 'anonymous';\r\n        document.querySelector('head')?.append(pop);\r\n    }\r\n\r\n    scrollPercent(win: HTMLElement) {\r\n        return (win.scrollTop / (win.scrollHeight - win.clientHeight) * 100);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const body = document.querySelector('body') as HTMLElement;\r\n        const navbar = document.getElementById('navbar') as HTMLElement;\r\n        body.setAttribute('data-offset', String(navbar.offsetHeight + 15));\r\n        const win = document.documentElement;\r\n        // setInterval(() => this.setState({ scrollProgress: this.scrollPercent(win) }), 50);\r\n        window.onscroll = () => this.setState({ scrollProgress: this.scrollPercent(win) });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mb-3 sticky-top\">\r\n                <nav id=\"navbar\" className=\"navbar navbar-expand-md navbar-dark bg-danger\">\r\n                    <div className=\"container\">\r\n                        <a className=\"navbar-brand\" href=\"https://github.com/MohnishKalia\">Mohnish Kalia</a>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                            <div className=\"navbar-nav navbar-right ml-auto\">\r\n                                <a className=\"nav-item nav-link\" href=\"#cards\">Past Projects</a>\r\n                                <a className=\"nav-item nav-link\" href=\"#iam\">I am...</a>\r\n                                <div className=\"dropdown\">\r\n                                    <a className=\"nav-item nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Proficiencies</a>\r\n                                    <div className=\"dropdown-menu\">\r\n                                        <a className=\"dropdown-item\" href=\"#backend\">Backend</a>\r\n                                        <a className=\"dropdown-item\" href=\"#webdevkit\">Web Devkit</a>\r\n                                        <a className=\"dropdown-item\" href=\"#scripting\">Scripting</a>\r\n                                    </div>\r\n                                </div>\r\n                                <a className=\"nav-item nav-link\" href=\"#edu\">Education</a>\r\n                                {/* <a className=\"nav-item nav-link\" href=\"#extra\">...</a> */}\r\n                                <a className=\"nav-item nav-link\" href=\"#footer\">Contact</a>\r\n                                <form className=\"form-inline\">\r\n                                    <span className=\"navbar-text ml-0 ml-sm-3 mr-3 font-weight-bold\">Dark Mode</span>\r\n                                    <Switch onChange={this.handleChange} checked={this.state.checked} />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"progress\" style={{ height: \"2px\" }}>\r\n                    <div className=\"progress-bar bg-success\" role=\"progressbar\" style={{\r\n                        width: `${this.state.scrollProgress}%`,\r\n                        transitionDuration: \"0.2s\"\r\n                    }} aria-valuenow={this.state.scrollProgress} aria-valuemin={0} aria-valuemax={100}></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport class Container extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport type CardData = {\r\n    type: \"repo\" | \"ref\",\r\n    title: string\r\n    description: string,\r\n    repoPath?: string,\r\n    notesPath?: string\r\n}\r\n\r\nexport default class Card extends Component<{ data: CardData }> {\r\n\r\n    headers = {\r\n        repo: 'Repository',\r\n        ref: 'Reference Notes',\r\n        proj: 'Project'\r\n    }\r\n\r\n    render() {\r\n        const { type, title, description, repoPath, notesPath } = this.props.data;\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">{this.headers[type]}</div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{title}</h5>\r\n                    <p className=\"card-text\">{description}</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    {repoPath && <a href={repoPath + \"index.html\"} className=\"card-link\">Repo Page</a>}\r\n                    {notesPath && <a href={notesPath} className=\"card-link\">View Notes</a>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport type MediaData = {\r\n    type: string,\r\n    name: string,\r\n    description?: string,\r\n    confidence: 1 | 2 | 3 | 4 | 5\r\n}\r\n\r\nexport default class Media extends Component<{ data: MediaData }> {\r\n\r\n    render() {\r\n        const { name, description, confidence } = this.props.data;\r\n        return (\r\n            <div className=\"media my-4 col-md-6\">\r\n                <img src={`./lib/${name}.png`} className=\"align-self-center mr-3\" alt=\"Loading...\" width=\"128\" />\r\n                <div className=\"media-body\">\r\n                    <h5 className=\"mt-0\">{name}</h5>\r\n                    {description && <p>{description}</p>}\r\n                    <div className=\"progress\" style={{ height: 30 }}>\r\n                        <div className=\"progress-bar\" style={{ width: `${confidence / 5 * 100}%` }} role=\"progressbar\">{`${confidence}/5`}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Card, { CardData } from './Card';\r\nimport Media, { MediaData } from './Media';\r\n\r\nconst Main: React.FC = () =>\r\n    <div>\r\n        {/* <Construction /> */}\r\n        <Cards />\r\n        <Iam />\r\n        <Proficiencies />\r\n        <Education />\r\n        {/* <Extra /> */}\r\n    </div>\r\n\r\nexport default Main;\r\n\r\nexport const Heading: React.FC<{ text: string }> = ({ text }) => <h3 className=\"col-md-12\">{text}</h3>\r\n\r\nexport const Item: React.FC<{ heading: string, description: string }> = ({ heading, description }) =>\r\n    <li className=\"list-group-item\">\r\n        <h5 className=\"mb-1\">{heading}</h5>\r\n        <p className=\"mb-1 text-muted\">{description}</p>\r\n    </li>\r\n\r\nexport const Construction: React.FC = () =>\r\n    <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n        <strong>Warning! This site is under constuction.</strong> Content within is not reflective of finished product.\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\nexport class Cards extends Component<{}, { cards: CardData[] }> {\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = { cards: [] };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await fetch('./cards.json');\r\n        const cards = await res.json() as CardData[];\r\n        this.setState({ cards });\r\n    }\r\n\r\n    getDecks() {\r\n        const { cards } = this.state;\r\n        const decks: JSX.Element[][] = [[]];\r\n        for (const [i, card] of cards.entries()) {\r\n            const index = Math.floor(i / 3);\r\n            const cur = decks[index];\r\n            cur.push(<Card data={card} key={card.title} />);\r\n        }\r\n        return decks.map(arr => <div className=\"col-md-12 mb-4\"><div className=\"card-deck\">{arr}</div></div>);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"cards\" className=\"row\">\r\n                {this.getDecks()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Iam: React.FC = () =>\r\n    <div id=\"iam\" className=\"row mb-4\">\r\n        <Heading text=\"I Am...\" />\r\n        <div className=\"col-md-12\">\r\n            <ul className=\"list-group list-group-flush\">\r\n                <Item heading=\"17 years old\" description=\"Looking towards college and a career\" />\r\n                <Item heading=\"Full-stack developer\" description=\"Hands on with MVC, MERN\" />\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\nexport class Proficiencies extends Component<{}, { profs: MediaData[] }> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = { profs: [] };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await fetch('./profs.json');\r\n        const profs = await res.json() as MediaData[];\r\n        this.setState({ profs });\r\n    }\r\n\r\n    getMedia(filter: string) {\r\n        return this.state.profs.filter(media => media.type === filter).map(media => <Media data={media} key={media.name} />);\r\n    }\r\n\r\n    render() {\r\n        const be = 'backend', wd = 'webdevkit', sc = 'scripting';\r\n        return (\r\n            <div id=\"profs\">\r\n                <div id={be} className=\"row\">\r\n                    <Heading text=\"Backend\" />\r\n                    {this.getMedia(be)}\r\n                </div>\r\n                <div id={wd} className=\"row\">\r\n                    <Heading text=\"Web Devkit\" />\r\n                    {this.getMedia(wd)}\r\n                </div>\r\n                <div id={sc} className=\"row\">\r\n                    <Heading text=\"Scripting\" />\r\n                    {this.getMedia(sc)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Education: React.FC = () =>\r\n    <div id=\"edu\" className=\"row\">\r\n        <Heading text=\"Education\" />\r\n        <div className=\"col-md-12\">\r\n            <ul className=\"list-group list-group-flush\">\r\n                <Item heading=\"Brookfield Central High School\" description=\"General studies and LAUNCH, 2020\" />\r\n                <Item heading=\"Marquette University\" description=\"COSC 2100 Data Structures and Algorithms\" />\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\nexport const Extra: React.FC = () =>\r\n    <div id=\"extra\">\r\n        <div className=\"jumbotron my-4\">\r\n            <h1 className=\"display-4\">Hello, everybody!</h1>\r\n            <p className=\"lead\">One of the most fun ways to manipulate a web page is by changing some key elements\r\n                        </p>\r\n            <hr />\r\n            <p>If you wish, click the button below to change the tab's icon.</p>\r\n            <p className=\"lead\">\r\n                <button id=\"switch\" className=\"btn btn-primary btn-lg\" disabled>Currently Under Construction</button>\r\n            </p>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <div className=\"alert alert-info h-100\" role=\"alert\">\r\n                    <h4 className=\"alert-heading\">If you can see this, my webpage worked!</h4>\r\n                    <p>Just for fun, here is a testing link for <a href=\"https://latinlexicon.org/\" target=\"_blank\"\r\n                        rel=\"noopener noreferrer\" className=\"alert-link\">Latin Lexicon</a> within the alert.</p>\r\n                    <hr />\r\n                    <p className=\"mb-0\">\r\n                        arma virumque canō, Trōiae quī prīmus ab ōrīs<br />\r\n                        Ītaliam fātō profugus Lāvīniaque vēnit<br />\r\n                        lītŏra, multum ille et terrīs iactātus et altō<br />\r\n                        vī superum, saevae memorem Iūnōnis ob īram\r\n                            </p>\r\n                    <hr />\r\n                    <p className=\"mb-0\">Remember that the most elegant solutions are (sometimes) the best.<br />Working on the progress.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-6 mt-4 mt-sm-0\">\r\n                <div className=\"embed-responsive embed-responsive-16by9\">\r\n                    <iframe className=\"embed-reponsive-item\" src=\"https://www.youtube.com/embed/PsO6ZnUZI0g\" title=\"stronger\"></iframe>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer id=\"footer\" className=\"my-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <h3 className=\"text-uppercase\">Mohnish Kalia</h3>\r\n                        <p className=\"text-muted\">Please check the links for further information.<br />Do not hesitate to reachout.</p>\r\n                        <p className=\"text-muted\">My email is: <a href=\"mailto:mohnish.kalia@gmail.com\">mohnish.kalia@gmail.com</a></p>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <h3 className=\"text-uppercase\">Helpful Resources</h3>\r\n                        <ul className=\"list-unstyled text-small\">\r\n                            <li><a className=\"text-muted\" href=\"https://beastscouttest.netlify.com\">BEAST Scouting</a></li>\r\n                            <li><a className=\"text-muted\" href=\"https://shiffman.net\">Helpful JS Teacher</a></li>\r\n                            <li><a className=\"text-muted\" href=\"https://github.com/MohnishKalia\">GitHub Profile</a></li>\r\n                            <li><a className=\"text-muted\"\r\n                                href=\"https://docs.oracle.com/en/java/javase/13/docs/api/index.html\">Java 13 API</a>\r\n                            </li>\r\n                            <li><a className=\"text-muted\" href=\"https://developer.mozilla.org/en-US/docs/Web\">MDN</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <p className=\"text-muted\">This website and all content authored by Mohnish Kalia within is open source.</p>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Header from './Header'\r\nimport { Container } from './Bootstrap'\r\nimport Main from './Main'\r\nimport Footer from './Footer'\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <Container>\r\n        <Main />\r\n        <Footer />\r\n      </Container>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}