{"version":3,"sources":["Header.tsx","Bootstrap.tsx","Card.tsx","Main.tsx","Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","state","checked","handleChange","bind","this","setState","elt","document","getElementById","remove","createLight","pop","createElement","href","id","rel","crossOrigin","querySelector","append","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onChange","Component","Container","props","children","Card","headers","repo","ref","proj","data","title","description","repoPath","notesPath","Main","Cards","dsData","apcsaData","ctwData","Extra","disabled","role","target","src","Footer","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ca9065be.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Switch from 'react-switch'\r\n\r\nexport default class Header extends Component<{}, { checked: boolean }> {\r\n    constructor() {\r\n        super({});\r\n        this.state = { checked: true };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(checked: boolean) {\r\n        this.setState({ checked });\r\n        const elt = document.getElementById('theme');\r\n        if (elt) elt.remove();\r\n        else this.createLight();\r\n        //(document.getElementById('theme') as HTMLLinkElement).href = `https://stackpath.bootstrapcdn.com/bootswatch/4.4.1/${checked ? 'darkly' : 'litera'}/bootstrap.min.css`\r\n    }\r\n\r\n    createLight() {\r\n        const pop = document.createElement('link');\r\n        pop.href = 'https://stackpath.bootstrapcdn.com/bootswatch/4.4.1/litera/bootstrap.min.css';\r\n        pop.id = 'theme';\r\n        pop.rel = 'stylesheet';\r\n        pop.crossOrigin = 'anonymous';\r\n        document.querySelector('body')?.append(pop);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-danger sticky-top mb-3\">\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand\" href=\"#\">Mohnish Kalia</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                        <div className=\"navbar-nav navbar-right ml-auto\">\r\n                            <a className=\"nav-item nav-link\" href=\"/DataStructures/index.html\">Data Structures</a>\r\n                            <a className=\"nav-item nav-link\" href=\"/IndividualWork/index.html\">AP Computer Science A</a>\r\n                            <form className=\"form-inline\">\r\n                                <span className=\"navbar-text ml-0 ml-sm-3 mr-3 font-weight-bold\">Dark Mode</span>\r\n                                <Switch onChange={this.handleChange} checked={this.state.checked} />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport class Container extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { CardData } from './types'\r\n\r\nexport default class Card extends Component<{ data: CardData }> {\r\n\r\n    headers = {\r\n        repo: 'Repository',\r\n        ref: 'Reference Notes',\r\n        proj: 'Project'\r\n    }\r\n\r\n    render() {\r\n        const { type, title, description, repoPath, notesPath } = this.props.data;\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">{this.headers[type]}</div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{title}</h5>\r\n                    <p className=\"card-text\">{description}</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    {repoPath && <a href={repoPath + \"index.html\"} className=\"card-link\">Repo Page</a>}\r\n                    {notesPath && <a href={notesPath} className=\"card-link\">View Notes</a>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { CardData } from './types';\r\nimport Card from './Card';\r\n\r\nexport default class Main extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Cards />\r\n                <Extra />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Cards extends Component {\r\n\r\n    dsData: CardData = {\r\n        type: 'repo',\r\n        title: 'Data Structures',\r\n        description: 'Assignment Java source code + book files for Data Structures @ Marquette University.',\r\n        repoPath: '/DataStructures/',\r\n        notesPath: 'https://docs.google.com/document/d/e/2PACX-1vQcWbUfrRR6N6h5BxdnzteHXayVCi9nv1hvHtMouggw2LDqTTiv7itdBcaWeXcZQRe8zkZ8B7KZuAT-/pub'\r\n    };\r\n\r\n    apcsaData: CardData = {\r\n        type: 'repo',\r\n        title: 'AP Computer Science A',\r\n        description: 'Collection of Java samples and assignments used and created during my junior year computer science class.',\r\n        repoPath: '/IndividualWork/',\r\n        notesPath: 'https://docs.google.com/document/d/127zV5BPuIynxdtRpARvU-n5dMDOOjuRxIB88nCfP6ec/pub'\r\n    }\r\n\r\n    ctwData: CardData = {\r\n        type: 'ref',\r\n        title: 'Code the Way',\r\n        description: 'Notes accrued throughout the CTW 2019 master class. This is more listed text than actual images.',\r\n        notesPath: 'https://docs.google.com/document/d/e/2PACX-1vQWmHEEKGJrUIU6FswHLYe0v9bzLJQIW6P9e1f1FikISQrFTDie71-aBZKFFINakS8lNKYOu6ZJQb5C/pub'\r\n    }\r\n\r\n    // async getData() {\r\n    //     const res = await fetch('./cards.json');\r\n    //     const json: CardData[] = await res.json();\r\n    //     const items = [];\r\n    //     for (const d of json)\r\n    //         items.push(<Card data={d} />);\r\n    //     return items;\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row card-deck\">\r\n                <Card data={this.dsData} />\r\n                <Card data={this.apcsaData} />\r\n                <Card data={this.ctwData} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Extra extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"jumbotron my-4\">\r\n                    <h1 className=\"display-4\">Hello, everybody!</h1>\r\n                    <p className=\"lead\">One of the most fun ways to manipulate a web page is by changing some key elements\r\n                        </p>\r\n                    <hr />\r\n                    <p>If you wish, click the button below to change the tab's icon.</p>\r\n                    <p className=\"lead\">\r\n                        <button id=\"switch\" className=\"btn btn-primary btn-lg\" disabled>Currently Under Construction</button>\r\n                    </p>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"alert alert-info h-100\" role=\"alert\">\r\n                            <h4 className=\"alert-heading\">If you can see this, my webpage worked!</h4>\r\n                            <p>Just for fun, here is a testing link for <a href=\"https://latinlexicon.org/\" target=\"_blank\"\r\n                                rel=\"noopener noreferrer\" className=\"alert-link\">Latin Lexicon</a> within the alert.</p>\r\n                            <hr />\r\n                            <p className=\"mb-0\">\r\n                                arma virumque canō, Trōiae quī prīmus ab ōrīs<br />\r\n                                Ītaliam fātō profugus Lāvīniaque vēnit<br />\r\n                                lītŏra, multum ille et terrīs iactātus et altō<br />\r\n                                vī superum, saevae memorem Iūnōnis ob īram\r\n                            </p>\r\n                            <hr />\r\n                            <p className=\"mb-0\">Remember that the most elegant solutions are (sometimes) the best.<br />Working on the progress.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 mt-4 mt-sm-0\">\r\n                        <div className=\"embed-responsive embed-responsive-16by9\">\r\n                            <iframe className=\"embed-reponsive-item\" src=\"https://www.youtube.com/embed/PsO6ZnUZI0g\" title=\"stronger\"></iframe>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"my-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <h3 className=\"text-uppercase\">Mohnish Kalia</h3>\r\n                        <p className=\"text-muted\">Please check the links for further information.<br />Do not hesitate to reachout.</p>\r\n                        <p className=\"text-muted\">My professional email is: <a href=\"mailto:mohnish.kalia@gmail.com\">mohnish.kalia@gmail.com</a></p>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <h3 className=\"text-uppercase\">Helpful Resources</h3>\r\n                        <ul className=\"list-unstyled text-small\">\r\n                            <li><a className=\"text-muted\" href=\"https://beastscouttest.netlify.com\">BEAST Scouting</a></li>\r\n                            <li><a className=\"text-muted\" href=\"https://shiffman.net\">Helpful JS Teacher</a></li>\r\n                            <li><a className=\"text-muted\" href=\"https://github.com/MohnishKalia\">GitHub Profile</a></li>\r\n                            <li><a className=\"text-muted\"\r\n                                href=\"https://docs.oracle.com/en/java/javase/13/docs/api/index.html\">Java 13 API</a>\r\n                            </li>\r\n                            <li><a className=\"text-muted\" href=\"https://developer.mozilla.org/en-US/docs/Web\">MDN</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <p className=\"text-muted\">This website and all content authored by Mohnish Kalia within is open source.</p>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport Header from './Header'\nimport { Container } from './Bootstrap'\nimport Main from './Main'\nimport Footer from './Footer'\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Container>\n        <Main />\n        <Footer />\n      </Container>\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}